use (
  {Readable} = dep://stream
  Assignation, RunReqStream
)

/**
 * An assigner is the responsible for setting the job
 * to every blank sheet received for an input stream.
 */
@abstract
export struct Assigner
  /**
   * Input stream where the blank sheets are.
   */
  pub const input: Readable

  /**
   * Output stream where to let the assignations.
   */
  pub const output: RunReqStream

  /**
   * Job infos to use.
   */
  pub const assignations: Assignation[]

  /**
   * Starts the assigner, reading from the input stream, assigning
   * and writing to the output stream.
   *
   * When the input stream is ended, this assigner ends too.
   */
  pub async proc start()
    # (1) perform assignation for each blank sheet
    const {input, output} = self

    await for each blankSheet in input do
      if req ::= self.assign(blankSheet); req is list then
        for each r in req do
          output.append(r)
      else
        output.append(req)
    
    # (2) set end for the output stream
    output.end()
  
  /**
   * Performs a new assignation.
   *
   * @dev
   * This method can return RunReq[] if a special operation must be
   * sent to several destinations such as, for example, the exit operation.
   */
  @abstract @hidden
  pub fn assign(blankSheet: BlankSheet): RunReq | RunReq[]
