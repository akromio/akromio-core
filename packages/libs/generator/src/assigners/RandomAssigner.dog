use (
  dep://array-shuffle
  Assigner
)

/**
 * An assigner to assign the jobs randomly.
 */
export struct RandomAssigner: Assigner
  /**
   * Current assignation order.
   */
  @hidden @strict
  pub var assignationOrder = []

  /**
   * @dev
   * The job weights must sum 100.
   */
  @post
  pvt proc post()
    # (1) calculate the total weight
    var total = 0

    for each job in self.jobs do
      total += job.weight
    
    # (2) check total weight
    if total != 100 then
      throw(TypeError($"Sum of job weights must be 100. Got: ${total}."))

  /**
   * Starts the assigner, reading from the input stream, assigning
   * and writing to the output stream.
   *
   * When the input stream is ended, this assigner ends too.
   */
  @override
  pub fn assign(): RunReq
    # (1) generate a new assignation batch if needed
    if len(self.assignationOrder) == 0 then
      self.assignationOrder = self.generateAssignationOrder()
    
    # (2) determine assignation
    return if Math.round(Math.random()) == 0 then
      self.assignationOrder.shift()
    else
      self.assignationOrder.pop()
    end

  /**
   * Generates an assignation order for 100 assignations,
   * attending to the weights.
   */
  @hidden
  pub fn generateAssignationOrder() -> order: list
    # (1) generate random jobs
    const jobs = shuffle(self.jobs)

    # (2) generate order
    for each job in jobs do
      for i = 0; i < job.weight; i += 1 do
        order.push(job)

    # (3) perform final shuffle
    order = shuffle(order)
