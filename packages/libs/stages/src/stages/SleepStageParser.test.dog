use (
  alias://expected
  {sim, fun} = alias://doubles

  SleepStageParser
)

suite(__filename, proc()
  const parser = SleepStageParser()

  suite("_parse()", proc()
    test("when declaration is not valid, error must be raised", proc()
      # (1) act
      const (
        decl = {sleep = "warmup", duration = true}
        out = peval(parser.parse(decl, sim(eval = fun.invokes(fn(decl) = decl end))))
      )

      # (2) assessment
      expected(out).it(0).equalTo(false).it(1).toBe(TypeError)
    end)

    test("when declaration is valid, this must be returned", proc()
      # (1) act
      const (
        jobs = []
        decl = {
          sleep = "pause"
          duration = "2m"
        }

        out = parser.parse(decl, sim(eval = fun.invokes(fn(decl) = decl end)))
      )

      # (2) assessment
      expected(out).equalTo(
        name = "pause"
        'impl' = "sleep"
        duration = 120000
      )
    end)
  end)
end)
