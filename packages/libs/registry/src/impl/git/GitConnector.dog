use (
  dep://axios
  alias://mime
  ../InternalConnector
)

/**
 * A registry connector to download files from
 * a Git repository.
 */
@impl(Connector)
export struct GitConnector: InternalConnector
  /**
   * HTTP client to use, compatible with Axios.
   */
  pub const client = axios

  /**
   * Host.
   */
  pub const host := "raw.githubusercontent.com"

  /**
   * The user account name where the repository is.
   */
  pub const user: text

  /**
   * Repository name.
   */
  pub const repo: text

  /**
   * Branch name.
   */
  pub const branch: text

  /**
   * Path prefix such as, for example, .akromio.
   */
  pub const prefix: text

  /**
   * @workaround
   * When axios gets a package.json from a Handlebars template,
   * its value is transformed to a map. We need the text, not the map.
   * For this reason, we check the content type and if handlebars and returned value is map,
   * this is transformed to text.
   */
  @override
  pub async fn _getItem(itemPath: text) -> item
    const (
      axios = self.client
      url = $"https://${self.host}/${self.user}/${self.repo}/${self.branch}/${self.prefix}${itemPath}"
    )

    if [ok, resp] ::= pawait(axios.get(url)); ok and resp.status == 200 then
      var (
        cty ::= mime.lookup(itemPath) or resp.headers["content-type"]
        value = resp.data
      )

      if cty == "text/x-handlebars-template" and value is not text then value = fmt(value)
      item = {name = itemPath, value, cty}
