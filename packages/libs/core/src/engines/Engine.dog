use (
  {Dataset} = alias://dataset

  RunOpts 
  ../{CallReq}
  ../ops/Ops
  ../errors/NotFoundError
  ../plugins/PluginParser
)

/**
 * An engine is a component with its operations catalog
 * working as the entry point for the things run.
 */
@abstract
export struct Engine
  /**
   * Dataset associated to this engine and used by its runner(s).
   */
  pub const dataset: Dataset

  /**
   * What to do on error if anything indicated explicitly.
   */
  pub const onError: ("carryOn" | "finish")

  /**
   * Cataloged operations of this engine.
   * When the user requests the run of an operation, the name of one of them must be passed.
   */
  pub const ops: Ops = Ops()

  /**
   * Plugin parser to use with the built-in plugins.
   */
  pub const pluginParser: PluginParser

  /**
   * Returns the built-in presets.
   */
  @hidden
  pub fn getBuiltInPresets() = []

  /**
   * Loads the built-in plugins.
   */
  pub async fn loadBuiltInPlugins() -> self
    const (
      {ops} = self
      parser = self.pluginParser
    )

    for each preset in self.getBuiltInPresets() do
      const plugins = await(parser.parsePreset(preset))
      ops.appendPlugins(...plugins)
  