use (
  ../CompositeOp
)

/**
 * A macro, that is, an operation composed of a sequence
 * of steps to run one by one.
 *
 * This macro can be a loop if the isLoop() returns true.
 */
@abstract
export struct Macro: CompositeOp
  /**
   * Must the steps be run randomly?
   */
  pub const random := false

  /**
   * Checks whether the macro is a loop.
   */
  pub fn isLoop() = false

  /**
   * Returns the collection to iterate using the given [call].
   */
  @noParamCheck
  pub fn getLoopCollection(call: Call) = []
