use (
  alias://expected
  {Constraints, DataTypeConstraint, EnumConstraint} = ~
)

suite(__filename, proc()
  suite("findConstraintByType()", proc()
    test("when constraint exists, this must be returned", proc()
      # (1) act
      const (
        dataTypeConstraint = DataTypeConstraint(dataType = "text")
        enumConstraint = EnumConstraint(options = ["one", "two", "three"])
        constraints = Constraints().appendConstraint(dataTypeConstraint).appendConstraint(enumConstraint)
        out = constraints.findConstraintByType(EnumConstraint)
      )

      # (2) assessment
      expected(out).sameAs(enumConstraint)
    end)

    test("when constraint not exists, nil must be returned", proc()
      # (1) act
      const (
        constraints = Constraints()
        out = constraints.findConstraintByType(EnumConstraint)
      )

      # (2) assessment
      expected(out).toBeNil()
    end)
  end)
end)