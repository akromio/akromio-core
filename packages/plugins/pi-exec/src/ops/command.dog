use (
  {exec} = dep://child_process
)

export {
  desc = "Runs a command."
  title = buildTitle
  parameterizer = buildParams
  fun = handle
}

/**
 * Builds params from args.
 */
fn buildParams(args?) -> params: map
  with type(args) do
    if list then
      params.command = args[0]
      params.opts = args[1] ?? {}
    if text then
      params.command = args
      params.opts = {}
    else
      params = args

/**
 * Builds the title from the parameters.
 */
fn buildTitle(params) = $"exec: run '${params.command}'"

/**
 * Runs a command.
 */
@async
fn handle(ctx=> {params})
  # (1) prepare options
  const {opts} = params

  if "workDir" in opts then
    opts.cwd = opts.workDir
    remove("workDir", opts)
  
  # (2) run
  const {command} = params

  return promise(proc(resolve, reject)
    exec(command, opts, proc(err?, stdout, stderr)
      if err then return reject(err)
      resolve({stdout, stderr})
    end)
  end)